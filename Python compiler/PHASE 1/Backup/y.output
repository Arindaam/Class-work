State 21 conflicts: 9 reduce/reduce
State 34 conflicts: 1 shift/reduce
State 115 conflicts: 2 shift/reduce
State 135 conflicts: 2 shift/reduce
State 137 conflicts: 10 shift/reduce


Grammar

    0 $accept: StartDebugger $end

    1 $@1: %empty

    2 StartDebugger: $@1 StartParse

    3 constant: T_Number
    4         | T_String

    5 term: T_ID
    6     | constant

    7 $@2: %empty

    8 StartParse: $@2 finalStatements StartParse
    9           | T_EndOfFile

   10 Expressions: arith_exp
   11            | bool_exp

   12 basic_stmt: break_stmt
   13           | import_stmt
   14           | assign_stmt
   15           | Expressions
   16           | print_stmt

   17 $@3: %empty

   18 arith_exp: term $@3 arith_OP
   19          | T_OP arith_exp T_CP

   20 arith_OP: T_Arop arith_exp
   21         | %empty

   22 bool_exp: T_Binary bool_OP
   23         | T_Not bool_exp
   24         | T_OP bool_exp T_CP
   25         | arith_exp bool_OP

   26 bool_OP: T_andor bool_exp
   27        | T_eq bool_exp
   28        | T_Relop bool_exp
   29        | %empty

   30 import_stmt: T_Import T_ID

   31 break_stmt: T_Break

   32 $@4: %empty

   33 assign_stmt: T_ID $@4 T_EQL RHS

   34 RHS: Expressions
   35    | func_call

   36 print_stmt: T_Print T_OP Recur T_CP

   37 finalStatements: basic_stmt T_NL

   38 $@5: %empty

   39 finalStatements: $@5 cmpd_stmt
   40                | func_def
   41                | func_call

   42 Recur: Expressions Recur
   43      | T_Comma Expressions Recur
   44      | %empty

   45 cmpd_stmt: if_stmt
   46          | while_stmt

   47 if_stmt: T_If bool_exp T_Cln T_NL T_id final suite elif_stmts

   48 $@6: %empty

   49 elif_stmts: T_Elif $@6 bool_exp T_Cln T_NL T_id final suite elif_stmts

   50 $@7: %empty

   51 elif_stmts: T_Else $@7 T_Cln T_NL T_id final suite try
   52           | final

   53 try: final
   54    | %empty

   55 final: basic_stmt T_NL
   56      | if_stmt
   57      | func_call

   58 suite: T_ND final suite
   59      | T_DD
   60      | %empty

   61 while_stmt: T_While bool_exp T_Cln T_NL T_id new nsuite

   62 new: basic_stmt T_NL
   63    | func_call

   64 nsuite: T_ND new nsuite
   65       | T_DD
   66       | %empty

   67 $@8: %empty

   68 args_list: T_ID $@8 T_Comma args_list
   69          | T_ID
   70          | %empty

   71 $@9: %empty

   72 $@10: %empty

   73 $@11: %empty

   74 func_def: T_Def $@9 T_ID $@10 T_OP args_list $@11 T_CP T_Cln T_NL T_id new nsuite

   75 $@12: %empty

   76 $@13: %empty

   77 func_call: T_ID $@12 T_OP args_list $@13 T_CP T_NL


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    T_Import (258) 30
    T_Print (259) 36
    T_If (260) 47
    T_While (261) 61
    T_Break (262) 31
    T_Else (263) 51
    T_Cln (264) 47 49 51 61 74
    T_Relop (265) 28
    T_Arop (266) 20
    T_OP (267) 19 24 36 74 77
    T_CP (268) 19 24 36 74 77
    T_Comma (269) 43 68
    T_EQL (270) 33
    T_Number (271) 3
    T_ID (272) 5 30 33 68 69 74 77
    T_String (273) 4
    T_andor (274) 26
    T_Binary (275) 22
    T_Def (276) 74
    T_Elif (277) 49
    T_eq (278) 27
    T_NL (279) 37 47 49 51 55 61 62 74 77
    T_Not (280) 23
    T_ND (281) 58 64
    T_DD (282) 59 65
    T_id (283) 47 49 51 61 74
    T_EndOfFile (284) 9


Nonterminals, with rules where they appear

    $accept (30)
        on left: 0
    StartDebugger (31)
        on left: 2
        on right: 0
    $@1 (32)
        on left: 1
        on right: 2
    constant (33)
        on left: 3 4
        on right: 6
    term (34)
        on left: 5 6
        on right: 18
    StartParse (35)
        on left: 8 9
        on right: 2 8
    $@2 (36)
        on left: 7
        on right: 8
    Expressions (37)
        on left: 10 11
        on right: 15 34 42 43
    basic_stmt (38)
        on left: 12 13 14 15 16
        on right: 37 55 62
    arith_exp (39)
        on left: 18 19
        on right: 10 19 20 25
    $@3 (40)
        on left: 17
        on right: 18
    arith_OP (41)
        on left: 20 21
        on right: 18
    bool_exp (42)
        on left: 22 23 24 25
        on right: 11 23 24 26 27 28 47 49 61
    bool_OP (43)
        on left: 26 27 28 29
        on right: 22 25
    import_stmt (44)
        on left: 30
        on right: 13
    break_stmt (45)
        on left: 31
        on right: 12
    assign_stmt (46)
        on left: 33
        on right: 14
    $@4 (47)
        on left: 32
        on right: 33
    RHS (48)
        on left: 34 35
        on right: 33
    print_stmt (49)
        on left: 36
        on right: 16
    finalStatements (50)
        on left: 37 39 40 41
        on right: 8
    $@5 (51)
        on left: 38
        on right: 39
    Recur (52)
        on left: 42 43 44
        on right: 36 42 43
    cmpd_stmt (53)
        on left: 45 46
        on right: 39
    if_stmt (54)
        on left: 47
        on right: 45 56
    elif_stmts (55)
        on left: 49 51 52
        on right: 47 49
    $@6 (56)
        on left: 48
        on right: 49
    $@7 (57)
        on left: 50
        on right: 51
    try (58)
        on left: 53 54
        on right: 51
    final (59)
        on left: 55 56 57
        on right: 47 49 51 52 53 58
    suite (60)
        on left: 58 59 60
        on right: 47 49 51 58
    while_stmt (61)
        on left: 61
        on right: 46
    new (62)
        on left: 62 63
        on right: 61 64 74
    nsuite (63)
        on left: 64 65 66
        on right: 61 64 74
    args_list (64)
        on left: 68 69 70
        on right: 68 74 77
    $@8 (65)
        on left: 67
        on right: 68
    func_def (66)
        on left: 74
        on right: 40
    $@9 (67)
        on left: 71
        on right: 74
    $@10 (68)
        on left: 72
        on right: 74
    $@11 (69)
        on left: 73
        on right: 74
    func_call (70)
        on left: 77
        on right: 35 41 57 63
    $@12 (71)
        on left: 75
        on right: 77
    $@13 (72)
        on left: 76
        on right: 77


State 0

    0 $accept: • StartDebugger $end

    $default  reduce using rule 1 ($@1)

    StartDebugger  go to state 1
    $@1            go to state 2


State 1

    0 $accept: StartDebugger • $end

    $end  shift, and go to state 3


State 2

    2 StartDebugger: $@1 • StartParse

    T_EndOfFile  shift, and go to state 4

    $default  reduce using rule 7 ($@2)

    StartParse  go to state 5
    $@2         go to state 6


State 3

    0 $accept: StartDebugger $end •

    $default  accept


State 4

    9 StartParse: T_EndOfFile •

    $default  reduce using rule 9 (StartParse)


State 5

    2 StartDebugger: $@1 StartParse •

    $default  reduce using rule 2 (StartDebugger)


State 6

    8 StartParse: $@2 • finalStatements StartParse

    T_Import  shift, and go to state 7
    T_Print   shift, and go to state 8
    T_Break   shift, and go to state 9
    T_OP      shift, and go to state 10
    T_Number  shift, and go to state 11
    T_ID      shift, and go to state 12
    T_String  shift, and go to state 13
    T_Binary  shift, and go to state 14
    T_Def     shift, and go to state 15
    T_Not     shift, and go to state 16

    $default  reduce using rule 38 ($@5)

    constant         go to state 17
    term             go to state 18
    Expressions      go to state 19
    basic_stmt       go to state 20
    arith_exp        go to state 21
    bool_exp         go to state 22
    import_stmt      go to state 23
    break_stmt       go to state 24
    assign_stmt      go to state 25
    print_stmt       go to state 26
    finalStatements  go to state 27
    $@5              go to state 28
    func_def         go to state 29
    func_call        go to state 30


State 7

   30 import_stmt: T_Import • T_ID

    T_ID  shift, and go to state 31


State 8

   36 print_stmt: T_Print • T_OP Recur T_CP

    T_OP  shift, and go to state 32


State 9

   31 break_stmt: T_Break •

    $default  reduce using rule 31 (break_stmt)


State 10

   19 arith_exp: T_OP • arith_exp T_CP
   24 bool_exp: T_OP • bool_exp T_CP

    T_OP      shift, and go to state 10
    T_Number  shift, and go to state 11
    T_ID      shift, and go to state 33
    T_String  shift, and go to state 13
    T_Binary  shift, and go to state 14
    T_Not     shift, and go to state 16

    constant   go to state 17
    term       go to state 18
    arith_exp  go to state 34
    bool_exp   go to state 35


State 11

    3 constant: T_Number •

    $default  reduce using rule 3 (constant)


State 12

    5 term: T_ID •
   33 assign_stmt: T_ID • $@4 T_EQL RHS
   77 func_call: T_ID • $@12 T_OP args_list $@13 T_CP T_NL

    T_OP      reduce using rule 75 ($@12)
    T_EQL     reduce using rule 32 ($@4)
    $default  reduce using rule 5 (term)

    $@4   go to state 36
    $@12  go to state 37


State 13

    4 constant: T_String •

    $default  reduce using rule 4 (constant)


State 14

   22 bool_exp: T_Binary • bool_OP

    T_Relop  shift, and go to state 38
    T_andor  shift, and go to state 39
    T_eq     shift, and go to state 40

    $default  reduce using rule 29 (bool_OP)

    bool_OP  go to state 41


State 15

   74 func_def: T_Def • $@9 T_ID $@10 T_OP args_list $@11 T_CP T_Cln T_NL T_id new nsuite

    $default  reduce using rule 71 ($@9)

    $@9  go to state 42


State 16

   23 bool_exp: T_Not • bool_exp

    T_OP      shift, and go to state 10
    T_Number  shift, and go to state 11
    T_ID      shift, and go to state 33
    T_String  shift, and go to state 13
    T_Binary  shift, and go to state 14
    T_Not     shift, and go to state 16

    constant   go to state 17
    term       go to state 18
    arith_exp  go to state 43
    bool_exp   go to state 44


State 17

    6 term: constant •

    $default  reduce using rule 6 (term)


State 18

   18 arith_exp: term • $@3 arith_OP

    $default  reduce using rule 17 ($@3)

    $@3  go to state 45


State 19

   15 basic_stmt: Expressions •

    $default  reduce using rule 15 (basic_stmt)


State 20

   37 finalStatements: basic_stmt • T_NL

    T_NL  shift, and go to state 46


State 21

   10 Expressions: arith_exp •
   25 bool_exp: arith_exp • bool_OP

    T_Relop  shift, and go to state 38
    T_andor  shift, and go to state 39
    T_eq     shift, and go to state 40

    T_OP      reduce using rule 10 (Expressions)
    T_OP      [reduce using rule 29 (bool_OP)]
    T_CP      reduce using rule 10 (Expressions)
    T_CP      [reduce using rule 29 (bool_OP)]
    T_Comma   reduce using rule 10 (Expressions)
    T_Comma   [reduce using rule 29 (bool_OP)]
    T_Number  reduce using rule 10 (Expressions)
    T_Number  [reduce using rule 29 (bool_OP)]
    T_ID      reduce using rule 10 (Expressions)
    T_ID      [reduce using rule 29 (bool_OP)]
    T_String  reduce using rule 10 (Expressions)
    T_String  [reduce using rule 29 (bool_OP)]
    T_Binary  reduce using rule 10 (Expressions)
    T_Binary  [reduce using rule 29 (bool_OP)]
    T_NL      reduce using rule 10 (Expressions)
    T_NL      [reduce using rule 29 (bool_OP)]
    T_Not     reduce using rule 10 (Expressions)
    T_Not     [reduce using rule 29 (bool_OP)]
    $default  reduce using rule 10 (Expressions)

    bool_OP  go to state 47


State 22

   11 Expressions: bool_exp •

    $default  reduce using rule 11 (Expressions)


State 23

   13 basic_stmt: import_stmt •

    $default  reduce using rule 13 (basic_stmt)


State 24

   12 basic_stmt: break_stmt •

    $default  reduce using rule 12 (basic_stmt)


State 25

   14 basic_stmt: assign_stmt •

    $default  reduce using rule 14 (basic_stmt)


State 26

   16 basic_stmt: print_stmt •

    $default  reduce using rule 16 (basic_stmt)


State 27

    8 StartParse: $@2 finalStatements • StartParse

    T_EndOfFile  shift, and go to state 4

    $default  reduce using rule 7 ($@2)

    StartParse  go to state 48
    $@2         go to state 6


State 28

   39 finalStatements: $@5 • cmpd_stmt

    T_If     shift, and go to state 49
    T_While  shift, and go to state 50

    cmpd_stmt   go to state 51
    if_stmt     go to state 52
    while_stmt  go to state 53


State 29

   40 finalStatements: func_def •

    $default  reduce using rule 40 (finalStatements)


State 30

   41 finalStatements: func_call •

    $default  reduce using rule 41 (finalStatements)


State 31

   30 import_stmt: T_Import T_ID •

    $default  reduce using rule 30 (import_stmt)


State 32

   36 print_stmt: T_Print T_OP • Recur T_CP

    T_OP      shift, and go to state 10
    T_Comma   shift, and go to state 54
    T_Number  shift, and go to state 11
    T_ID      shift, and go to state 33
    T_String  shift, and go to state 13
    T_Binary  shift, and go to state 14
    T_Not     shift, and go to state 16

    $default  reduce using rule 44 (Recur)

    constant     go to state 17
    term         go to state 18
    Expressions  go to state 55
    arith_exp    go to state 21
    bool_exp     go to state 22
    Recur        go to state 56


State 33

    5 term: T_ID •

    $default  reduce using rule 5 (term)


State 34

   19 arith_exp: T_OP arith_exp • T_CP
   25 bool_exp: arith_exp • bool_OP

    T_Relop  shift, and go to state 38
    T_CP     shift, and go to state 57
    T_andor  shift, and go to state 39
    T_eq     shift, and go to state 40

    T_CP  [reduce using rule 29 (bool_OP)]

    bool_OP  go to state 47


State 35

   24 bool_exp: T_OP bool_exp • T_CP

    T_CP  shift, and go to state 58


State 36

   33 assign_stmt: T_ID $@4 • T_EQL RHS

    T_EQL  shift, and go to state 59


State 37

   77 func_call: T_ID $@12 • T_OP args_list $@13 T_CP T_NL

    T_OP  shift, and go to state 60


State 38

   28 bool_OP: T_Relop • bool_exp

    T_OP      shift, and go to state 10
    T_Number  shift, and go to state 11
    T_ID      shift, and go to state 33
    T_String  shift, and go to state 13
    T_Binary  shift, and go to state 14
    T_Not     shift, and go to state 16

    constant   go to state 17
    term       go to state 18
    arith_exp  go to state 43
    bool_exp   go to state 61


State 39

   26 bool_OP: T_andor • bool_exp

    T_OP      shift, and go to state 10
    T_Number  shift, and go to state 11
    T_ID      shift, and go to state 33
    T_String  shift, and go to state 13
    T_Binary  shift, and go to state 14
    T_Not     shift, and go to state 16

    constant   go to state 17
    term       go to state 18
    arith_exp  go to state 43
    bool_exp   go to state 62


State 40

   27 bool_OP: T_eq • bool_exp

    T_OP      shift, and go to state 10
    T_Number  shift, and go to state 11
    T_ID      shift, and go to state 33
    T_String  shift, and go to state 13
    T_Binary  shift, and go to state 14
    T_Not     shift, and go to state 16

    constant   go to state 17
    term       go to state 18
    arith_exp  go to state 43
    bool_exp   go to state 63


State 41

   22 bool_exp: T_Binary bool_OP •

    $default  reduce using rule 22 (bool_exp)


State 42

   74 func_def: T_Def $@9 • T_ID $@10 T_OP args_list $@11 T_CP T_Cln T_NL T_id new nsuite

    T_ID  shift, and go to state 64


State 43

   25 bool_exp: arith_exp • bool_OP

    T_Relop  shift, and go to state 38
    T_andor  shift, and go to state 39
    T_eq     shift, and go to state 40

    $default  reduce using rule 29 (bool_OP)

    bool_OP  go to state 47


State 44

   23 bool_exp: T_Not bool_exp •

    $default  reduce using rule 23 (bool_exp)


State 45

   18 arith_exp: term $@3 • arith_OP

    T_Arop  shift, and go to state 65

    $default  reduce using rule 21 (arith_OP)

    arith_OP  go to state 66


State 46

   37 finalStatements: basic_stmt T_NL •

    $default  reduce using rule 37 (finalStatements)


State 47

   25 bool_exp: arith_exp bool_OP •

    $default  reduce using rule 25 (bool_exp)


State 48

    8 StartParse: $@2 finalStatements StartParse •

    $default  reduce using rule 8 (StartParse)


State 49

   47 if_stmt: T_If • bool_exp T_Cln T_NL T_id final suite elif_stmts

    T_OP      shift, and go to state 10
    T_Number  shift, and go to state 11
    T_ID      shift, and go to state 33
    T_String  shift, and go to state 13
    T_Binary  shift, and go to state 14
    T_Not     shift, and go to state 16

    constant   go to state 17
    term       go to state 18
    arith_exp  go to state 43
    bool_exp   go to state 67


State 50

   61 while_stmt: T_While • bool_exp T_Cln T_NL T_id new nsuite

    T_OP      shift, and go to state 10
    T_Number  shift, and go to state 11
    T_ID      shift, and go to state 33
    T_String  shift, and go to state 13
    T_Binary  shift, and go to state 14
    T_Not     shift, and go to state 16

    constant   go to state 17
    term       go to state 18
    arith_exp  go to state 43
    bool_exp   go to state 68


State 51

   39 finalStatements: $@5 cmpd_stmt •

    $default  reduce using rule 39 (finalStatements)


State 52

   45 cmpd_stmt: if_stmt •

    $default  reduce using rule 45 (cmpd_stmt)


State 53

   46 cmpd_stmt: while_stmt •

    $default  reduce using rule 46 (cmpd_stmt)


State 54

   43 Recur: T_Comma • Expressions Recur

    T_OP      shift, and go to state 10
    T_Number  shift, and go to state 11
    T_ID      shift, and go to state 33
    T_String  shift, and go to state 13
    T_Binary  shift, and go to state 14
    T_Not     shift, and go to state 16

    constant     go to state 17
    term         go to state 18
    Expressions  go to state 69
    arith_exp    go to state 21
    bool_exp     go to state 22


State 55

   42 Recur: Expressions • Recur

    T_OP      shift, and go to state 10
    T_Comma   shift, and go to state 54
    T_Number  shift, and go to state 11
    T_ID      shift, and go to state 33
    T_String  shift, and go to state 13
    T_Binary  shift, and go to state 14
    T_Not     shift, and go to state 16

    $default  reduce using rule 44 (Recur)

    constant     go to state 17
    term         go to state 18
    Expressions  go to state 55
    arith_exp    go to state 21
    bool_exp     go to state 22
    Recur        go to state 70


State 56

   36 print_stmt: T_Print T_OP Recur • T_CP

    T_CP  shift, and go to state 71


State 57

   19 arith_exp: T_OP arith_exp T_CP •

    $default  reduce using rule 19 (arith_exp)


State 58

   24 bool_exp: T_OP bool_exp T_CP •

    $default  reduce using rule 24 (bool_exp)


State 59

   33 assign_stmt: T_ID $@4 T_EQL • RHS

    T_OP      shift, and go to state 10
    T_Number  shift, and go to state 11
    T_ID      shift, and go to state 72
    T_String  shift, and go to state 13
    T_Binary  shift, and go to state 14
    T_Not     shift, and go to state 16

    constant     go to state 17
    term         go to state 18
    Expressions  go to state 73
    arith_exp    go to state 21
    bool_exp     go to state 22
    RHS          go to state 74
    func_call    go to state 75


State 60

   77 func_call: T_ID $@12 T_OP • args_list $@13 T_CP T_NL

    T_ID  shift, and go to state 76

    $default  reduce using rule 70 (args_list)

    args_list  go to state 77


State 61

   28 bool_OP: T_Relop bool_exp •

    $default  reduce using rule 28 (bool_OP)


State 62

   26 bool_OP: T_andor bool_exp •

    $default  reduce using rule 26 (bool_OP)


State 63

   27 bool_OP: T_eq bool_exp •

    $default  reduce using rule 27 (bool_OP)


State 64

   74 func_def: T_Def $@9 T_ID • $@10 T_OP args_list $@11 T_CP T_Cln T_NL T_id new nsuite

    $default  reduce using rule 72 ($@10)

    $@10  go to state 78


State 65

   20 arith_OP: T_Arop • arith_exp

    T_OP      shift, and go to state 79
    T_Number  shift, and go to state 11
    T_ID      shift, and go to state 33
    T_String  shift, and go to state 13

    constant   go to state 17
    term       go to state 18
    arith_exp  go to state 80


State 66

   18 arith_exp: term $@3 arith_OP •

    $default  reduce using rule 18 (arith_exp)


State 67

   47 if_stmt: T_If bool_exp • T_Cln T_NL T_id final suite elif_stmts

    T_Cln  shift, and go to state 81


State 68

   61 while_stmt: T_While bool_exp • T_Cln T_NL T_id new nsuite

    T_Cln  shift, and go to state 82


State 69

   43 Recur: T_Comma Expressions • Recur

    T_OP      shift, and go to state 10
    T_Comma   shift, and go to state 54
    T_Number  shift, and go to state 11
    T_ID      shift, and go to state 33
    T_String  shift, and go to state 13
    T_Binary  shift, and go to state 14
    T_Not     shift, and go to state 16

    $default  reduce using rule 44 (Recur)

    constant     go to state 17
    term         go to state 18
    Expressions  go to state 55
    arith_exp    go to state 21
    bool_exp     go to state 22
    Recur        go to state 83


State 70

   42 Recur: Expressions Recur •

    $default  reduce using rule 42 (Recur)


State 71

   36 print_stmt: T_Print T_OP Recur T_CP •

    $default  reduce using rule 36 (print_stmt)


State 72

    5 term: T_ID •
   77 func_call: T_ID • $@12 T_OP args_list $@13 T_CP T_NL

    T_OP      reduce using rule 75 ($@12)
    $default  reduce using rule 5 (term)

    $@12  go to state 37


State 73

   34 RHS: Expressions •

    $default  reduce using rule 34 (RHS)


State 74

   33 assign_stmt: T_ID $@4 T_EQL RHS •

    $default  reduce using rule 33 (assign_stmt)


State 75

   35 RHS: func_call •

    $default  reduce using rule 35 (RHS)


State 76

   68 args_list: T_ID • $@8 T_Comma args_list
   69          | T_ID •

    T_CP      reduce using rule 69 (args_list)
    $default  reduce using rule 67 ($@8)

    $@8  go to state 84


State 77

   77 func_call: T_ID $@12 T_OP args_list • $@13 T_CP T_NL

    $default  reduce using rule 76 ($@13)

    $@13  go to state 85


State 78

   74 func_def: T_Def $@9 T_ID $@10 • T_OP args_list $@11 T_CP T_Cln T_NL T_id new nsuite

    T_OP  shift, and go to state 86


State 79

   19 arith_exp: T_OP • arith_exp T_CP

    T_OP      shift, and go to state 79
    T_Number  shift, and go to state 11
    T_ID      shift, and go to state 33
    T_String  shift, and go to state 13

    constant   go to state 17
    term       go to state 18
    arith_exp  go to state 87


State 80

   20 arith_OP: T_Arop arith_exp •

    $default  reduce using rule 20 (arith_OP)


State 81

   47 if_stmt: T_If bool_exp T_Cln • T_NL T_id final suite elif_stmts

    T_NL  shift, and go to state 88


State 82

   61 while_stmt: T_While bool_exp T_Cln • T_NL T_id new nsuite

    T_NL  shift, and go to state 89


State 83

   43 Recur: T_Comma Expressions Recur •

    $default  reduce using rule 43 (Recur)


State 84

   68 args_list: T_ID $@8 • T_Comma args_list

    T_Comma  shift, and go to state 90


State 85

   77 func_call: T_ID $@12 T_OP args_list $@13 • T_CP T_NL

    T_CP  shift, and go to state 91


State 86

   74 func_def: T_Def $@9 T_ID $@10 T_OP • args_list $@11 T_CP T_Cln T_NL T_id new nsuite

    T_ID  shift, and go to state 76

    $default  reduce using rule 70 (args_list)

    args_list  go to state 92


State 87

   19 arith_exp: T_OP arith_exp • T_CP

    T_CP  shift, and go to state 57


State 88

   47 if_stmt: T_If bool_exp T_Cln T_NL • T_id final suite elif_stmts

    T_id  shift, and go to state 93


State 89

   61 while_stmt: T_While bool_exp T_Cln T_NL • T_id new nsuite

    T_id  shift, and go to state 94


State 90

   68 args_list: T_ID $@8 T_Comma • args_list

    T_ID  shift, and go to state 76

    $default  reduce using rule 70 (args_list)

    args_list  go to state 95


State 91

   77 func_call: T_ID $@12 T_OP args_list $@13 T_CP • T_NL

    T_NL  shift, and go to state 96


State 92

   74 func_def: T_Def $@9 T_ID $@10 T_OP args_list • $@11 T_CP T_Cln T_NL T_id new nsuite

    $default  reduce using rule 73 ($@11)

    $@11  go to state 97


State 93

   47 if_stmt: T_If bool_exp T_Cln T_NL T_id • final suite elif_stmts

    T_Import  shift, and go to state 7
    T_Print   shift, and go to state 8
    T_If      shift, and go to state 49
    T_Break   shift, and go to state 9
    T_OP      shift, and go to state 10
    T_Number  shift, and go to state 11
    T_ID      shift, and go to state 12
    T_String  shift, and go to state 13
    T_Binary  shift, and go to state 14
    T_Not     shift, and go to state 16

    constant     go to state 17
    term         go to state 18
    Expressions  go to state 19
    basic_stmt   go to state 98
    arith_exp    go to state 21
    bool_exp     go to state 22
    import_stmt  go to state 23
    break_stmt   go to state 24
    assign_stmt  go to state 25
    print_stmt   go to state 26
    if_stmt      go to state 99
    final        go to state 100
    func_call    go to state 101


State 94

   61 while_stmt: T_While bool_exp T_Cln T_NL T_id • new nsuite

    T_Import  shift, and go to state 7
    T_Print   shift, and go to state 8
    T_Break   shift, and go to state 9
    T_OP      shift, and go to state 10
    T_Number  shift, and go to state 11
    T_ID      shift, and go to state 12
    T_String  shift, and go to state 13
    T_Binary  shift, and go to state 14
    T_Not     shift, and go to state 16

    constant     go to state 17
    term         go to state 18
    Expressions  go to state 19
    basic_stmt   go to state 102
    arith_exp    go to state 21
    bool_exp     go to state 22
    import_stmt  go to state 23
    break_stmt   go to state 24
    assign_stmt  go to state 25
    print_stmt   go to state 26
    new          go to state 103
    func_call    go to state 104


State 95

   68 args_list: T_ID $@8 T_Comma args_list •

    $default  reduce using rule 68 (args_list)


State 96

   77 func_call: T_ID $@12 T_OP args_list $@13 T_CP T_NL •

    $default  reduce using rule 77 (func_call)


State 97

   74 func_def: T_Def $@9 T_ID $@10 T_OP args_list $@11 • T_CP T_Cln T_NL T_id new nsuite

    T_CP  shift, and go to state 105


State 98

   55 final: basic_stmt • T_NL

    T_NL  shift, and go to state 106


State 99

   56 final: if_stmt •

    $default  reduce using rule 56 (final)


State 100

   47 if_stmt: T_If bool_exp T_Cln T_NL T_id final • suite elif_stmts

    T_ND  shift, and go to state 107
    T_DD  shift, and go to state 108

    $default  reduce using rule 60 (suite)

    suite  go to state 109


State 101

   57 final: func_call •

    $default  reduce using rule 57 (final)


State 102

   62 new: basic_stmt • T_NL

    T_NL  shift, and go to state 110


State 103

   61 while_stmt: T_While bool_exp T_Cln T_NL T_id new • nsuite

    T_ND  shift, and go to state 111
    T_DD  shift, and go to state 112

    $default  reduce using rule 66 (nsuite)

    nsuite  go to state 113


State 104

   63 new: func_call •

    $default  reduce using rule 63 (new)


State 105

   74 func_def: T_Def $@9 T_ID $@10 T_OP args_list $@11 T_CP • T_Cln T_NL T_id new nsuite

    T_Cln  shift, and go to state 114


State 106

   55 final: basic_stmt T_NL •

    $default  reduce using rule 55 (final)


State 107

   58 suite: T_ND • final suite

    T_Import  shift, and go to state 7
    T_Print   shift, and go to state 8
    T_If      shift, and go to state 49
    T_Break   shift, and go to state 9
    T_OP      shift, and go to state 10
    T_Number  shift, and go to state 11
    T_ID      shift, and go to state 12
    T_String  shift, and go to state 13
    T_Binary  shift, and go to state 14
    T_Not     shift, and go to state 16

    constant     go to state 17
    term         go to state 18
    Expressions  go to state 19
    basic_stmt   go to state 98
    arith_exp    go to state 21
    bool_exp     go to state 22
    import_stmt  go to state 23
    break_stmt   go to state 24
    assign_stmt  go to state 25
    print_stmt   go to state 26
    if_stmt      go to state 99
    final        go to state 115
    func_call    go to state 101


State 108

   59 suite: T_DD •

    $default  reduce using rule 59 (suite)


State 109

   47 if_stmt: T_If bool_exp T_Cln T_NL T_id final suite • elif_stmts

    T_Import  shift, and go to state 7
    T_Print   shift, and go to state 8
    T_If      shift, and go to state 49
    T_Break   shift, and go to state 9
    T_Else    shift, and go to state 116
    T_OP      shift, and go to state 10
    T_Number  shift, and go to state 11
    T_ID      shift, and go to state 12
    T_String  shift, and go to state 13
    T_Binary  shift, and go to state 14
    T_Elif    shift, and go to state 117
    T_Not     shift, and go to state 16

    constant     go to state 17
    term         go to state 18
    Expressions  go to state 19
    basic_stmt   go to state 98
    arith_exp    go to state 21
    bool_exp     go to state 22
    import_stmt  go to state 23
    break_stmt   go to state 24
    assign_stmt  go to state 25
    print_stmt   go to state 26
    if_stmt      go to state 99
    elif_stmts   go to state 118
    final        go to state 119
    func_call    go to state 101


State 110

   62 new: basic_stmt T_NL •

    $default  reduce using rule 62 (new)


State 111

   64 nsuite: T_ND • new nsuite

    T_Import  shift, and go to state 7
    T_Print   shift, and go to state 8
    T_Break   shift, and go to state 9
    T_OP      shift, and go to state 10
    T_Number  shift, and go to state 11
    T_ID      shift, and go to state 12
    T_String  shift, and go to state 13
    T_Binary  shift, and go to state 14
    T_Not     shift, and go to state 16

    constant     go to state 17
    term         go to state 18
    Expressions  go to state 19
    basic_stmt   go to state 102
    arith_exp    go to state 21
    bool_exp     go to state 22
    import_stmt  go to state 23
    break_stmt   go to state 24
    assign_stmt  go to state 25
    print_stmt   go to state 26
    new          go to state 120
    func_call    go to state 104


State 112

   65 nsuite: T_DD •

    $default  reduce using rule 65 (nsuite)


State 113

   61 while_stmt: T_While bool_exp T_Cln T_NL T_id new nsuite •

    $default  reduce using rule 61 (while_stmt)


State 114

   74 func_def: T_Def $@9 T_ID $@10 T_OP args_list $@11 T_CP T_Cln • T_NL T_id new nsuite

    T_NL  shift, and go to state 121


State 115

   58 suite: T_ND final • suite

    T_ND  shift, and go to state 107
    T_DD  shift, and go to state 108

    T_ND      [reduce using rule 60 (suite)]
    T_DD      [reduce using rule 60 (suite)]
    $default  reduce using rule 60 (suite)

    suite  go to state 122


State 116

   51 elif_stmts: T_Else • $@7 T_Cln T_NL T_id final suite try

    $default  reduce using rule 50 ($@7)

    $@7  go to state 123


State 117

   49 elif_stmts: T_Elif • $@6 bool_exp T_Cln T_NL T_id final suite elif_stmts

    $default  reduce using rule 48 ($@6)

    $@6  go to state 124


State 118

   47 if_stmt: T_If bool_exp T_Cln T_NL T_id final suite elif_stmts •

    $default  reduce using rule 47 (if_stmt)


State 119

   52 elif_stmts: final •

    $default  reduce using rule 52 (elif_stmts)


State 120

   64 nsuite: T_ND new • nsuite

    T_ND  shift, and go to state 111
    T_DD  shift, and go to state 112

    $default  reduce using rule 66 (nsuite)

    nsuite  go to state 125


State 121

   74 func_def: T_Def $@9 T_ID $@10 T_OP args_list $@11 T_CP T_Cln T_NL • T_id new nsuite

    T_id  shift, and go to state 126


State 122

   58 suite: T_ND final suite •

    $default  reduce using rule 58 (suite)


State 123

   51 elif_stmts: T_Else $@7 • T_Cln T_NL T_id final suite try

    T_Cln  shift, and go to state 127


State 124

   49 elif_stmts: T_Elif $@6 • bool_exp T_Cln T_NL T_id final suite elif_stmts

    T_OP      shift, and go to state 10
    T_Number  shift, and go to state 11
    T_ID      shift, and go to state 33
    T_String  shift, and go to state 13
    T_Binary  shift, and go to state 14
    T_Not     shift, and go to state 16

    constant   go to state 17
    term       go to state 18
    arith_exp  go to state 43
    bool_exp   go to state 128


State 125

   64 nsuite: T_ND new nsuite •

    $default  reduce using rule 64 (nsuite)


State 126

   74 func_def: T_Def $@9 T_ID $@10 T_OP args_list $@11 T_CP T_Cln T_NL T_id • new nsuite

    T_Import  shift, and go to state 7
    T_Print   shift, and go to state 8
    T_Break   shift, and go to state 9
    T_OP      shift, and go to state 10
    T_Number  shift, and go to state 11
    T_ID      shift, and go to state 12
    T_String  shift, and go to state 13
    T_Binary  shift, and go to state 14
    T_Not     shift, and go to state 16

    constant     go to state 17
    term         go to state 18
    Expressions  go to state 19
    basic_stmt   go to state 102
    arith_exp    go to state 21
    bool_exp     go to state 22
    import_stmt  go to state 23
    break_stmt   go to state 24
    assign_stmt  go to state 25
    print_stmt   go to state 26
    new          go to state 129
    func_call    go to state 104


State 127

   51 elif_stmts: T_Else $@7 T_Cln • T_NL T_id final suite try

    T_NL  shift, and go to state 130


State 128

   49 elif_stmts: T_Elif $@6 bool_exp • T_Cln T_NL T_id final suite elif_stmts

    T_Cln  shift, and go to state 131


State 129

   74 func_def: T_Def $@9 T_ID $@10 T_OP args_list $@11 T_CP T_Cln T_NL T_id new • nsuite

    T_ND  shift, and go to state 111
    T_DD  shift, and go to state 112

    $default  reduce using rule 66 (nsuite)

    nsuite  go to state 132


State 130

   51 elif_stmts: T_Else $@7 T_Cln T_NL • T_id final suite try

    T_id  shift, and go to state 133


State 131

   49 elif_stmts: T_Elif $@6 bool_exp T_Cln • T_NL T_id final suite elif_stmts

    T_NL  shift, and go to state 134


State 132

   74 func_def: T_Def $@9 T_ID $@10 T_OP args_list $@11 T_CP T_Cln T_NL T_id new nsuite •

    $default  reduce using rule 74 (func_def)


State 133

   51 elif_stmts: T_Else $@7 T_Cln T_NL T_id • final suite try

    T_Import  shift, and go to state 7
    T_Print   shift, and go to state 8
    T_If      shift, and go to state 49
    T_Break   shift, and go to state 9
    T_OP      shift, and go to state 10
    T_Number  shift, and go to state 11
    T_ID      shift, and go to state 12
    T_String  shift, and go to state 13
    T_Binary  shift, and go to state 14
    T_Not     shift, and go to state 16

    constant     go to state 17
    term         go to state 18
    Expressions  go to state 19
    basic_stmt   go to state 98
    arith_exp    go to state 21
    bool_exp     go to state 22
    import_stmt  go to state 23
    break_stmt   go to state 24
    assign_stmt  go to state 25
    print_stmt   go to state 26
    if_stmt      go to state 99
    final        go to state 135
    func_call    go to state 101


State 134

   49 elif_stmts: T_Elif $@6 bool_exp T_Cln T_NL • T_id final suite elif_stmts

    T_id  shift, and go to state 136


State 135

   51 elif_stmts: T_Else $@7 T_Cln T_NL T_id final • suite try

    T_ND  shift, and go to state 107
    T_DD  shift, and go to state 108

    T_ND      [reduce using rule 60 (suite)]
    T_DD      [reduce using rule 60 (suite)]
    $default  reduce using rule 60 (suite)

    suite  go to state 137


State 136

   49 elif_stmts: T_Elif $@6 bool_exp T_Cln T_NL T_id • final suite elif_stmts

    T_Import  shift, and go to state 7
    T_Print   shift, and go to state 8
    T_If      shift, and go to state 49
    T_Break   shift, and go to state 9
    T_OP      shift, and go to state 10
    T_Number  shift, and go to state 11
    T_ID      shift, and go to state 12
    T_String  shift, and go to state 13
    T_Binary  shift, and go to state 14
    T_Not     shift, and go to state 16

    constant     go to state 17
    term         go to state 18
    Expressions  go to state 19
    basic_stmt   go to state 98
    arith_exp    go to state 21
    bool_exp     go to state 22
    import_stmt  go to state 23
    break_stmt   go to state 24
    assign_stmt  go to state 25
    print_stmt   go to state 26
    if_stmt      go to state 99
    final        go to state 138
    func_call    go to state 101


State 137

   51 elif_stmts: T_Else $@7 T_Cln T_NL T_id final suite • try

    T_Import  shift, and go to state 7
    T_Print   shift, and go to state 8
    T_If      shift, and go to state 49
    T_Break   shift, and go to state 9
    T_OP      shift, and go to state 10
    T_Number  shift, and go to state 11
    T_ID      shift, and go to state 12
    T_String  shift, and go to state 13
    T_Binary  shift, and go to state 14
    T_Not     shift, and go to state 16

    T_Import  [reduce using rule 54 (try)]
    T_Print   [reduce using rule 54 (try)]
    T_If      [reduce using rule 54 (try)]
    T_Break   [reduce using rule 54 (try)]
    T_OP      [reduce using rule 54 (try)]
    T_Number  [reduce using rule 54 (try)]
    T_ID      [reduce using rule 54 (try)]
    T_String  [reduce using rule 54 (try)]
    T_Binary  [reduce using rule 54 (try)]
    T_Not     [reduce using rule 54 (try)]
    $default  reduce using rule 54 (try)

    constant     go to state 17
    term         go to state 18
    Expressions  go to state 19
    basic_stmt   go to state 98
    arith_exp    go to state 21
    bool_exp     go to state 22
    import_stmt  go to state 23
    break_stmt   go to state 24
    assign_stmt  go to state 25
    print_stmt   go to state 26
    if_stmt      go to state 99
    try          go to state 139
    final        go to state 140
    func_call    go to state 101


State 138

   49 elif_stmts: T_Elif $@6 bool_exp T_Cln T_NL T_id final • suite elif_stmts

    T_ND  shift, and go to state 107
    T_DD  shift, and go to state 108

    $default  reduce using rule 60 (suite)

    suite  go to state 141


State 139

   51 elif_stmts: T_Else $@7 T_Cln T_NL T_id final suite try •

    $default  reduce using rule 51 (elif_stmts)


State 140

   53 try: final •

    $default  reduce using rule 53 (try)


State 141

   49 elif_stmts: T_Elif $@6 bool_exp T_Cln T_NL T_id final suite • elif_stmts

    T_Import  shift, and go to state 7
    T_Print   shift, and go to state 8
    T_If      shift, and go to state 49
    T_Break   shift, and go to state 9
    T_Else    shift, and go to state 116
    T_OP      shift, and go to state 10
    T_Number  shift, and go to state 11
    T_ID      shift, and go to state 12
    T_String  shift, and go to state 13
    T_Binary  shift, and go to state 14
    T_Elif    shift, and go to state 117
    T_Not     shift, and go to state 16

    constant     go to state 17
    term         go to state 18
    Expressions  go to state 19
    basic_stmt   go to state 98
    arith_exp    go to state 21
    bool_exp     go to state 22
    import_stmt  go to state 23
    break_stmt   go to state 24
    assign_stmt  go to state 25
    print_stmt   go to state 26
    if_stmt      go to state 99
    elif_stmts   go to state 142
    final        go to state 119
    func_call    go to state 101


State 142

   49 elif_stmts: T_Elif $@6 bool_exp T_Cln T_NL T_id final suite elif_stmts •

    $default  reduce using rule 49 (elif_stmts)
